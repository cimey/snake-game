(()=>{"use strict";var t={460:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.CanvasApi=void 0,e.CanvasApi=class{constructor(t,e){this._size=t,e&&null!==e||(this._elem=document.body);const i=document.getElementById(e);if(!i)throw"Element not found";this._elem=i}Awake(){let t=document.createElement("canvas");t.setAttribute("width",this._size.x.toString()),t.setAttribute("height",this._size.y.toString()),this._elem.appendChild(t),this._canvas=t,this._ctx=t.getContext("2d")}get Context(){return this._ctx}get Canvas(){return this._canvas}FillRectangle(t,e,i){this._ctx.beginPath(),this._ctx.fillStyle=i,this._ctx.fillRect(t.x,t.y,e.x,e.y),this._ctx.fill()}ClearRect(t,e){this._ctx.clearRect(t.x,t.y,e.x,e.y)}SetStyle(t){for(const e in t)Object.hasOwnProperty.call(t,e)&&t[e]&&(this._canvas.style[e]=t[e])}DrawLabel(t,e){this._ctx.font="20px Arial",this._ctx.fillStyle="#fff",this._ctx.textAlign="left",this._ctx.fillText(t,e.x,e.y)}}},39:function(t,e,i){var s=this&&this.__createBinding||(Object.create?function(t,e,i,s){void 0===s&&(s=i);var n=Object.getOwnPropertyDescriptor(e,i);n&&!("get"in n?!e.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return e[i]}}),Object.defineProperty(t,s,n)}:function(t,e,i,s){void 0===s&&(s=i),t[s]=e[i]}),n=this&&this.__exportStar||function(t,e){for(var i in t)"default"===i||Object.prototype.hasOwnProperty.call(e,i)||s(e,t,i)};Object.defineProperty(e,"__esModule",{value:!0}),n(i(499),e),n(i(460),e),n(i(966),e)},966:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0})},499:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.Vector2D=void 0,e.Vector2D=class{constructor(t,e){this.x=t,this.y=e}}},509:function(t,e,i){var s=this&&this.__createBinding||(Object.create?function(t,e,i,s){void 0===s&&(s=i);var n=Object.getOwnPropertyDescriptor(e,i);n&&!("get"in n?!e.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return e[i]}}),Object.defineProperty(t,s,n)}:function(t,e,i,s){void 0===s&&(s=i),t[s]=e[i]}),n=this&&this.__exportStar||function(t,e){for(var i in t)"default"===i||Object.prototype.hasOwnProperty.call(e,i)||s(e,t,i)};Object.defineProperty(e,"__esModule",{value:!0}),n(i(305),e)},305:(t,e)=>{Object.defineProperty(e,"__esModule",{value:!0}),e.KeyboardEvents=void 0;class i{static SubscribeToUpKey(t){let e=this.arrowUpSubscribers.findIndex((e=>e.instance===t.instance));e>-1?this.arrowUpSubscribers[e]=t:this.arrowUpSubscribers.push(t)}static SubscribeToDownKey(t){let e=this.arrowDownSubscribers.findIndex((e=>e.instance===t.instance));e>-1?this.arrowDownSubscribers[e]=t:this.arrowDownSubscribers.push(t)}static SubscribeToLeftKey(t){let e=this.arrowLeftSubscribers.findIndex((e=>e.instance===t.instance));e>-1?this.arrowLeftSubscribers[e]=t:this.arrowLeftSubscribers.push(t)}static SubscribeToRightKey(t){let e=this.arrowRightSubscribers.findIndex((e=>e.instance===t.instance));e>-1?this.arrowRightSubscribers[e]=t:this.arrowRightSubscribers.push(t)}static ListenKeyboardEvents(){document.body.addEventListener("keydown",(function(t){switch(t.key){case"ArrowLeft":i.arrowLeftSubscribers.forEach((t=>{t.callback.call(null)}));break;case"ArrowRight":i.arrowRightSubscribers.forEach((t=>{t.callback.call(null)}));break;case"ArrowUp":i.arrowUpSubscribers.forEach((t=>{t.callback.call(null)}));break;case"ArrowDown":i.arrowDownSubscribers.forEach((t=>{t.callback.call(null)}))}}))}}e.KeyboardEvents=i,i.arrowUpSubscribers=[],i.arrowDownSubscribers=[],i.arrowLeftSubscribers=[],i.arrowRightSubscribers=[]}},e={};function i(s){var n=e[s];if(void 0!==n)return n.exports;var o=e[s]={exports:{}};return t[s].call(o.exports,o,o.exports,i),o.exports}(()=>{var t=i(39);const e=0,s=0,n=615,o=615,r="#ffaa00",a=0,c=0,h=615,d=615,_="#ffccaa",l=15,u=15,b="rgba(1,1,1,1)",w=4,f=15,v=15,y="white",g=80;class p{constructor(t,e){this.x=t,this.y=e}}class D{constructor(){}static set ElementId(t){this._elementId=t}static get BackgroundCanvas(){return this._backgroundCanvas||(this._backgroundCanvas=new t.CanvasApi(new p(n,o),this._elementId),this._backgroundCanvas.Awake(),this._backgroundCanvas.SetStyle({zIndex:"0"})),this._backgroundCanvas}static get ForegroundCanvas(){return this._foregroundCanvas||(this._foregroundCanvas=new t.CanvasApi(new p(h,d),this._elementId),this._foregroundCanvas.Awake(),this._foregroundCanvas.SetStyle({zIndex:"1"})),this._foregroundCanvas}}D._elementId="myDiv";class x{constructor(t,e,i){this._position=t,this._size=e,this._color=i,this.Awake()}Update(){this.Clear(),this.Draw()}Awake(){this.Clear(),this.Draw()}Clear(){D.ForegroundCanvas.ClearRect(this._position,this._size)}Draw(){D.ForegroundCanvas.FillRectangle(this._position,this._size,this._color)}}class S{constructor(t,e,i,s,n){this._direction=t,this._position=i,this._size=e,this._color=s,this._gameDirection=n}Update(){this.Clear(),this.Draw()}Awake(){this.Draw()}set Position(t){this._position=t}get Position(){return this._position}get Size(){return this._size}Draw(){D.ForegroundCanvas.FillRectangle(this._position,this._size,this._color)}Clear(){D.ForegroundCanvas.ClearRect(this._position,this._size)}get Direction(){return this._direction}set Direction(t){this._direction=t}}var P;!function(t){t[t.Up=1]="Up",t[t.Down=2]="Down",t[t.Left=3]="Left",t[t.Right=4]="Right"}(P||(P={}));class k{static UpdateNodePosition(t,e,i){e==P.Up&&(t.y=t.y-i),e==P.Down&&(t.y=t.y+i),e==P.Left&&(t.x=t.x-i),e==P.Right&&(t.x=t.x+i)}static SetPrevNodePos(t,e,i){let s=new p(t.x,t.y);return e==P.Up&&(s.y=s.y+i),e==P.Down&&(s.y=s.y-i),e==P.Left&&(s.x=s.x+i),e==P.Right&&(s.x=s.x-i),s}static GenerateRandomInt(t,e){return Math.floor(Math.random()*(e-t+1))+t}static Does2NodeIntersect(t,e){return t.Position.x,t.Size.x,t.Position.y,t.Size.y,e.Position.x,e.Size.x,e.Position.y,e.Size.y,t.Position.x+t.Size.x<e.Position.x||e.Position.x+e.Size.x<t.Position.x||t.Position.y+t.Size.y<e.Position.y||e.Position.y+e.Size.y<t.Position.y}}var C=i(509);class m{constructor(){this._nodes=[],this._headNodePosition=null,this._currentDirection=w,this.Awake()}Update(){this.UpdateNodes(),this._headNodePosition=this._nodes[0].Position;for(let t=0;t<this._nodes.length;t++)this._nodes[t].Update()}UpdateNodes(){let t=[];var e=new p(this._nodes[0].Position.x,this._nodes[0].Position.y),i=this._nodes[0].Size;k.UpdateNodePosition(e,this._currentDirection,i.x);var s=new S(this._currentDirection,i,e,b,this._currentDirection);t.push(s);for(let e=0;e<this._nodes.length-1;e++){var n=k.SetPrevNodePos(t[e].Position,t[e].Direction,t[e].Size.x);let i=new S(this._nodes[e].Direction,this._nodes[e].Size,n,b,this._currentDirection);i._gameDirection=this._currentDirection,t.push(i)}this._nodes=t}Awake(){this.SubscribeToKeyEvents(),this.InitNodes();for(let t=0;t<this._nodes.length;t++)this._nodes[t].Awake()}InitNodes(){for(let t=0;t<4;t++){let e=new S(this._currentDirection,new p(u,l),new p(u*(21-t),21*l),b,this._currentDirection);0==t&&(this._headNodePosition=e.Position),this._nodes.push(e)}}get Head(){return this._headNodePosition}get Direction(){return this._currentDirection}get HN(){return this._nodes[0]}get DoesSnakeOverlaps(){for(let t=1;t<this._nodes.length;t++)if(this._nodes[0].Position.x==this._nodes[t].Position.x&&this._nodes[0].Position.y==this._nodes[t].Position.y)return!0;return!1}AddNewNode(){let t=this._nodes[this._nodes.length-1];var e=k.SetPrevNodePos(t.Position,t.Direction,t.Size.x);let i=new S(t.Direction,t.Size,e,b,this._currentDirection);this._nodes.push(i)}SubscribeToKeyEvents(){C.KeyboardEvents.ListenKeyboardEvents(),C.KeyboardEvents.SubscribeToDownKey({instance:this,callback:()=>{this._currentDirection!=P.Down&&this._currentDirection!=P.Up&&(this._currentDirection=P.Down,this.UpdateNodes())}}),C.KeyboardEvents.SubscribeToUpKey({instance:this,callback:()=>{this._currentDirection!=P.Down&&this._currentDirection!=P.Up&&(this._currentDirection=P.Up,this.UpdateNodes())}}),C.KeyboardEvents.SubscribeToLeftKey({instance:this,callback:()=>{this._currentDirection!=P.Left&&this._currentDirection!=P.Right&&(this._currentDirection=P.Left,this.UpdateNodes())}}),C.KeyboardEvents.SubscribeToRightKey({instance:this,callback:()=>{this._currentDirection!=P.Left&&this._currentDirection!=P.Right&&(this._currentDirection=P.Right,this.UpdateNodes())}})}}class R{constructor(t){this._food=null,this._level=g,this._gameOver=!1,this._score=0,this._snake=new m,this._foodPosition=this.getRandomPosition(),this.InitFood(this._foodPosition),this.Update(),this._elementId=t,D.ElementId=t}Update(){var t;if(!this._gameOver){if(this.HitTheWall()||this._snake.DoesSnakeOverlaps)return this._gameOver=!0,void D.ForegroundCanvas.DrawLabel("Game Over",new p(h/2,d/2));this.ClearGameScreen(),this.DrawGameScreen(),this.SnakeEatFood()&&(this._foodPosition=this.getRandomPosition(),this.InitFood(this._foodPosition),this._snake.AddNewNode(),this._score++),this._snake.Update(),null===(t=this._food)||void 0===t||t.Update(),setTimeout((()=>{this.Update()}),this._level)}}DrawGameScreen(){D.BackgroundCanvas.FillRectangle(new p(e,s),new p(n,o),r),D.ForegroundCanvas.FillRectangle(new p(a,c),new p(h,d),_),D.ForegroundCanvas.DrawLabel("Score: "+this._score.toString(),new p(10,30))}ClearGameScreen(){D.BackgroundCanvas.ClearRect(new p(e,s),new p(n,o)),D.ForegroundCanvas.ClearRect(new p(a,c),new p(h,d))}InitFood(t){this._food=new x(t,new p(v,f),y)}SnakeEatFood(){return!!this._snake.Head&&((this._snake.Direction==P.Right||this._snake.Direction==P.Left)&&this._snake.Head.y==this._foodPosition.y&&(this._snake.Head.x>=this._foodPosition.x&&this._snake.Head.x<=this._foodPosition.x+v||this._snake.Head.x+v>=this._foodPosition.x&&this._snake.Head.x+v<=this._foodPosition.x)||(this._snake.Direction==P.Up||this._snake.Direction==P.Down)&&this._snake.Head.x==this._foodPosition.x&&(this._snake.Head.y>=this._foodPosition.y&&this._snake.Head.y<=this._foodPosition.y+f||this._snake.Head.y+f>=this._foodPosition.y&&this._snake.Head.y+f<=this._foodPosition.y))}HitTheWall(){if(!this._snake.Head)return!1;let t=this._snake.Head.x,e=this._snake.Head.y,i=a,s=c,n=i+h,o=s+d;return t-(this._snake.Direction===P.Left?u:0)<=i-1||t+(this._snake.Direction===P.Right?u:0)>=n-1||e-(this._snake.Direction===P.Up?l:0)<=s-1||e+(this._snake.Direction===P.Down?l:0)>=o-1}getRandomPosition(){return new p(k.GenerateRandomInt(0,23)*u,k.GenerateRandomInt(0,23)*u)}}window.addEventListener("load",(t=>{new R("myDiv")}))})()})();